plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.2.70'
    id 'com.bmuschko.docker-remote-api' version '3.6.1'
}

group 'de.mrk'
version '1.0'

mainClassName = 'MainKt'
jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
}


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

docker {
    url = 'tcp://127.0.0.1:2375'
}

task dockerCreateDockerfile(type: Dockerfile, dependsOn: [jar, installDist]) {
    from 'arm32v7/openjdk:8'
    runCommand('apt-get update && apt-get install -y texlive texlive-extra-utils texlive-fonts-extra ' +
            'texlive-lang-german texlive-latex-extra imagemagick')

    defaultCommand("/renderLaTeXbot/bin/renderLaTeXbot")
    addFile({ installDist.destinationDir.name }, { "/${installDist.destinationDir.name}" })

    addFile("res", "/root/texmf/tex/latex/local/")
    addFile({ "app-lib/${jar.archiveName}" }, { "/${installDist.destinationDir.name}/lib/${jar.archiveName}" })
}

task dockerCopyDist(type: Sync, dependsOn: [jar, installDist]) {
    from { installDist.destinationDir.parentFile }
    into { dockerCreateDockerfile.destFile.parentFile }

    exclude "**/lib/${jar.archiveName}"
    into("app-lib") { from jar }
}
dockerCreateDockerfile.dependsOn(dockerCopyDist)

task dockerCopyRes(type: Sync) {
    from 'res'
    into new File(dockerCreateDockerfile.destFile.parentFile, 'res')
}
dockerCreateDockerfile.dependsOn(dockerCopyRes)

task dockerBuildImage(type: DockerBuildImage, dependsOn: [dockerCreateDockerfile]) {
    inputDir = dockerCreateDockerfile.destFile.parentFile
    tags = ['render-latex-bot']
}



repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.26.0"

    compile "org.telegram:telegrambots:4.1"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
